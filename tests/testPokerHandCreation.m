classdef testPokerHandCreation < matlab.unittest.TestCase
%TESTPOKERHANDCREATION Tests the creation and identification of every type
%of poker hand
    properties
        Deck = PokerDeck();
    end
    properties (TestParameter)
        handInfo = struct( ...
            Single = {{"Single",["2C","4D","6H","8S","10C"]}}, ...
            Pair = {{"Pair",["2C","4D","4H","8S","10C"]}}, ...
            TwoPair = {{"TwoPair",["2C","4D","4H","8S","8C"]}}, ...
            ThreeOfAKind = {{"ThreeOfAKind",["2C","4D","4H","4S","10C"]}}, ...
            StraightBottom = {{"Straight",["2C","3D","4H","5S","AC"]}}, ...
            StraightMiddle = {{"Straight",["8C","9D","10H","JS","QC"]}}, ...
            StraightTop = {{"Straight",["10C","JD","QH","KS","AC"]}}, ...
            Flush = {{"Flush",["2H","4H","6H","8H","10H"]}}, ...
            FullHouse = {{"FullHouse",["JC","JD","JH","2S","2C"]}}, ...
            FourOfAKind = {{"FourOfAKind",["KC","KD","KH","KS","2C"]}}, ...
            StraightFlush = {{"StraightFlush",["8C","9C","10C","JC","QC"]}}, ...
            RoyalFlush = {{"RoyalFlush",["10S","JS","QS","KS","AS"]}});
    end

    methods (Test, ParameterCombination="sequential")
        function testCreatePokerHands(testCase,handInfo)
            expectedHandType = handInfo{1};
            
            cardIdentifiers = handInfo{2};
            cards = testCase.Deck.getCardsByIdentifier(cardIdentifiers);
            hand = PokerHand(cards);
            actualHandType = hand.Type;
            
            testCase.verifyEqual(actualHandType,expectedHandType);
        end
    end

end